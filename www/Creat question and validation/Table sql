-- Table pour ecrire une question et la valider --
CREATE TABLE questions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    contenu TEXT NOT NULL,
    statut ENUM('en_attente', 'valide') DEFAULT 'en_attente',
    date_envoi DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Table pour écrie des commentaires sous les question et pouvoire répondre c'est commentaire --
CREATE TABLE IF NOT EXISTS commentaires (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_question INT NOT NULL,
  id_parent INT DEFAULT NULL,
  id_user INT NOT NULL,
  contenu TEXT NOT NULL,
  date_post DATETIME DEFAULT CURRENT_TIMESTAMP,
  statut ENUM('normal','signale','supprime') DEFAULT 'normal',
  FOREIGN KEY (id_question) REFERENCES questions(id),
  FOREIGN KEY (id_parent) REFERENCES commentaires(id) ON DELETE CASCADE,
  FOREIGN KEY (id_user) REFERENCES users(id_user)
);



-- Table pour réagir à une question --
CREATE TABLE IF NOT EXISTS reactions (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_question INT NOT NULL,
  id_user INT NOT NULL,
  niveau ENUM('rouge','orange','jaune','vert','bleu') NOT NULL,
  date_reaction DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (id_question) REFERENCES questions(id),
  UNIQUE (id_question,id_user)
);




-- Table pour pouvoir interdire des mots dans les commentaires --
CREATE TABLE IF NOT EXISTS mots_interdits (
    id INT AUTO_INCREMENT PRIMARY KEY,
    mot VARCHAR(100) NOT NULL
);

-- Table pour pouvoir signaler un utilisateur --
CREATE TABLE IF NOT EXISTS signalements (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_commentaire INT NOT NULL,
  id_signaleur INT NOT NULL,
  raison TEXT NOT NULL,
  date_signalement DATETIME DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (id_commentaire) REFERENCES commentaires(id),
  FOREIGN KEY (id_signaleur) REFERENCES users(id_user)
);

CREATE TABLE IF NOT EXISTS bannissements (
  id INT AUTO_INCREMENT PRIMARY KEY,
  id_user INT NOT NULL,
  date_fin DATETIME NOT NULL,
  FOREIGN KEY (id_user) REFERENCES users(id_user)
);